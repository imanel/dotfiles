[alias]
	br = branch
	co = checkout
	ci = commit
	cm = commit -m
	st = status -s
	di = diff
	# View abbreviated SHA, description, and history graph of the latest 20 commits
	lg = log --pretty=oneline -n 20 --graph --abbrev-commit
	pl = pull
	ps = push
	# Remove cached files and add them again.
	rma = "!r() {rm -r --cached $1; add $1}; r"
	# View the current working tree status using the short format
	# Interactive rebase with the given number of latest commits
	squash = "!r() { git rebase -i HEAD~$1; }; r"

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[core]
	# Use custom `.gitignore` and `.gitattributes`
	excludesfile = ~/.gitignore
	# attributesfile = ~/.gitattributes
	# Treat spaces before tabs, lines that are indented with 8 or more spaces, and
	# all kinds of trailing whitespace as an error.
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of
	# a line
	whitespace = space-before-tab,indent-with-non-tab,trailing-space
	# Make `git rebase` safer on OS X
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false
	# Set editor to Sublime Text
	editor = subl -w

[color]
	# Use colors in Git commands that are capable of colored output when
	# outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true

[push]
	default = current

[user]
	name = Bernard Potocki
	email = bernard.potocki@imanel.org
